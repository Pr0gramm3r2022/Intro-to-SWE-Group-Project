<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Blj/AJZDi9HzWXpx/tTMZ5BGxs8fP0LjQh2vssqUhAEBURozfugJaAucWUt9H+oGYLSKlrVYAxAQgMZu
        XUVqNyUjJSajF3iiKtqEnUTOEUbbDJwo8kwo76z0WcUYDe1Wkv4EQhbNyhWo4LEXURewtrQRjYFuYcXl
        barbbSkOIzYKXDy50ZSJs/Ci1eDFkZnOC1SuZLj704tm96iHGAgYLZyE90VsEwLWkQIkk2+iD9Qt7MO5
        5oInTRmIn7FDwqCQcBWOSltKldq1p7fVePHFWIcNeCIeSijb450hyUIfrIPuisE/NBKle1aUpIkXPN6G
        JJbi7MUSH0YAwBRRPifmHLVjzLMCJeChB+AZU0HfulWScXMhPEUH4W3cQdoX6CtQErTfCca93eLLkJvT
        P58VLpWxJ8Fi1aKLbrsR9HlQ9TlxsEgtXEMogZEgRN6NnBi0isEHJDf/AAFdAc1Pd4LCoCwgGLMjS3lu
        hhIJIxgXNqWZMii2A5EMCMWuiu1KeR1jD6GGSJ4gEdykyqGtTM3NgtjWHJb66MQmSjcZsEQ7Wasy+sim
        kAVEzrUn0/fWJBKCEIbo2oltnkXQEMA2Lgb2iZgiVM07IDy6+hZfGjIOPI/a5yKFcZhcfcaDx7MiEH5H
        COpRThESIanFZHBoFAcq0VyTOZYJ7t5EoUQ1FcSl3L1+qUwm43FiXSVti7/AdgrsXoanIvBelqWp5jiE
        IEQgCKVDLSUiAVg3Ys2ksUw1etT/ABms4OTykxg1uJlTUymC4AEGll80fj/1ozNBur/zj//aAAwDAQAC
        AAMAAAAQ8888888888888888888888888888888888888888889888888888880DrKvAby78886ZpFVl
        Ylus888v6qRijZ7jc8888zPb1D5BnV888888w48ws888888888888888888888888888888888888888
        88888888888888888//EACURAQACAgECBgMBAAAAAAAAAAEAESExQVFxIGGBkaHwMFBgsf/aAAgBAwEB
        PxD9U9EVU8Z17/kchydnT112t4ldGdOCw3bBZQ51qoPXlAv+pJ6sdUD2Sops7UH5u+Ygt7DR7GISTmCa
        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
</value>
  </data>
</root>